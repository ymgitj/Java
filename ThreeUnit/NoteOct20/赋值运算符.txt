一"赋值运算符
"=" 二元运算符
变量类型 变量名=所赋的值
int a=10;
float b=18.889f;
int c=a+b;
//从右往左运算

二"算术运算符
+
-
*
/
%
//0不可以做除数 否则会报ArthmeticException的异常
三"自增和自减运算符
++a(--a)
a++(a--)

四"比较运算符
1.比较运算符是 "二元运算符"
结果为 "布尔型"

>
<
!=
==
>=
<=

五"逻辑运算符
操作符    含义         用法         结合方向
&&,&     逻辑与       op1&&op2     左-->右
||,|     逻辑或       op1||op2     左-->右
！       逻辑非       !op1          左<--右

//在逻辑运算符中只有！是一元运算符，其它为二元运算符
//
&&与&的区别
表达示1&&表达示2
当表达示1为false则不去判断表达示二，可以节省计算机的判断次数;
||与|区别同上

六"位运算符

~     按位取反
&     按位与
|     按位或             按位运算符
^     按位异或
"""""""""""""""""""""""""""""""""
<<    左移
>>    右移               移位运算符
>>>   无符号右移

（&）双目运算符
只有运算符两边同时为真时才为真（1）否则为假（0）
如果两个操作数精度不同，则结果为精度高的精度
（|）双目运算符
两边同时为假才为假
（～）按位非（按位取反）
将操作数中的1全部替换为0
（^）双目运算符
两个操作数相同为0不同为1

java语言移位运算符有三种其操作的数据类型有
byte short char int long 五种
（<<）
将左边的操作数在内存中的二进制数据，向左移动右边操作数指定的位数，低位补零

（>>）
如果最高位为0 移空的位数补零
如果最高位为1 移空的位数补1
（>>>）
不管高位为1还是为0移空的部位都补零

七"三元运算符
表达式?条件1：条件2
boolean b=(45>67)?false:true;

八"运算符优先级
1         （）       括号
2          +,-      正负号
3         ++,--,!   自增自减
4         *,/,%     乘除，取余
5         +,-       加减
6         >>,<<,>>> 移位运算
7         <,>,<=,>= 比较大小
8         <=,>=,!=  比较是否相等
9         &         按位与运算
10        ^         按位异或运算
11        |         按位或运算
12        &&        逻辑与
13        ||        逻辑或
14        ?:        三元运算符
15        =         赋值运算符
如果两个表达式优先级相同则那么左边的表达式要比右边的表达式先被处理