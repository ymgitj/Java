                    数组
 5.1 数组概述
 //具有相同数据类型的一组数据的集合 。
 5.2 一维数组
 //既一组相同数据类型的集合。
 5.2.1
 //数组元素类型 数组名字{};
 //数组元素类型[] 数组名字;
 //数组元素类型包括基本数据类型和非基本数据类型
 //[]表示该变量是数组变量
 //声明数组 eg: int arr[];    String []str; 
 //数组名字 =new 数组类型[数组元素的个数]（分配内存）
 // arr=new int[10];//为arr数组分配长度为10的内存空间
 //数组元素类型 数组名[]=new 数组元素类型[数组元素个数];
 eg: int name[]=new int[10];
 
 5.2.2 初始一维数组
 //第一种初始化 int arr[]=new int[]{1,2,3,4};            
 //第二种初始化 int arr[]={1,2,3,5,5};
 //初始化可以省略数组长度和new运算符
 
 5.2.3 范例1：求一维数组各元素的和
 5.2.4 范例2：获取一维数组的最小值
 
 5.3 多维数组
 5.3.1 二维数组
 //数组元素类型 数组名[][];
 //数组元素类型[][] 数组名;
 int arr[][];     //创建二维数组 
 arr=new int[2][4];//为数组分配内存空间
 //分配数组拥有7个长度为7的一维数组
 //单独分配内存空间
 arr=new int[2][];
 arr[0]=new int[2];
 arr[1]=new int[3];
 //二维数组初始化
 type arrname[][]={value1,value2,value3....valuen};
 //type 表示数组类型
 //arrname表示数组名
 //{value表示数组各个元素的值}
 
 int name[][]=new int[][]{{14,67,6},{6,9,9}}
 5.3.3 范例3 对矩阵进行转置运算
 
 5.4 数组的基本操作
 5.4.1 
 1.遍历数组
 2.遍历二维数组
 3.foreach遍历数组
 5.4.2 填充替换数组元素
 //Arrays 类中的静态方法fill()对数组元素进行替换
 //该方法通过重载形式可以完成任意类型的数组元素的替换
 //fill(int[] a,int fromIndex,int toIndex,int value)
 该方法将指定的int值分配给int型数组,指定范围内的元素
 填充的范围从fromIndex(包括)到toIndex(不包括)如果
 fromIndex==toIndex则填充为空
 //a 要填充的数组
 //fromIndex:要使用指定值填充的第一个元素的索引（包括）
 //toIndex:要使用指定值填充的最后一个元素的索引（不包括）
 //value:要存储数组所有元素的值
 //返回值：替换元素后的数组
 5.4.3 对数组进行排序
 //Arrays.sort(obj);
 //指进行排序的数组名
 //返回值,排序后的数组
 //java中String类型的数组排序算法是根据字典编排顺序排序的
 //数字排在字母前面,大写字母排在小写字母前面
 5.4.4
 //copeOf(arr,newLength)
 //arr:要进行复制的数组
 //newLength 不int型常量,指复制后新数组的长度
 //返回值：复制后的数组
 //copyOfRange(int [] arr,int fromIndex,int toIndex)
 //arr要进行复制的数组对象
 //fromIndex:指定开始复制数组的索引位置(必需在0到数组长度之间,包括索引是fromIndex的元素）
 //toIndex:要复制范围的最后索引位置(可以大于数组arr的长度新数组不包括索引是toIndex的元素)
 5.4.5 对比一维数组二维数组所占内存
 5.4.6 使用直接插入排序法排序
 5.5.1 使用冒泡排序法排序
 5.5.2 输出九宫格

